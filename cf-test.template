{

"AWSTemplateFormatVersion" : "2010-09-09",



"Description" : "AWS Service Catalog sample template. Creates an Amazon EC2 instance

                  running the Amazon Linux AMI.The AMI is chosen based on the region

                  in which the stack is run. This example creates an EC2 security

                  group for the instance to give you SSH access. **WARNING** This

                  template creates an Amazon EC2 instance. You will be billed for the

                  AWS resources used if you create a stack from this template.",



"Parameters" : {

  "KeyName": {

    "Description" : "Name of an existing EC2 key pair for SSH access to the EC2 instance.",

    "Type": "AWS::EC2::KeyPair::KeyName",

    "Default" : "cruk_development",


  },



  "VpcId" : {

    "Type" : "AWS::EC2::VPC::Id",

    "Description" : "Service Catalog VPC",

    "Default" : "vpc-4620a621",




  },





  "InstanceType" : {

    "Description" : "EC2 instance type.",

    "Type" : "String",

    "Default" : "t2.micro",

    "AllowedValues" : [ "t2.nano", "t2.micro", "t2.small" ]

  },



  "SSHLocation" : {

    "Description" : "The IP address range that can SSH to the EC2 instance.",

    "Type": "String",

    "MinLength": "9",

    "MaxLength": "18",

    "Default": "143.65.196.4/32",

    "AllowedValues" : [ "143.65.196.4/32" ],


    "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",

    "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."

 }

},



"Metadata" : {

  "AWS::CloudFormation::Interface" : {

    "ParameterGroups" : [{

      "Label" : {"default": "Instance configuration"},

      "Parameters" : ["InstanceType"]

    },{

      "Label" : {"default": "Security configuration"},

      "Parameters" : ["KeyName", "SSHLocation"]

    }],

    "ParameterLabels" : {

      "InstanceType": {"default": "Server size:"},

      "KeyName": {"default": "Key pair:"},

      "SSHLoca vpc-4620a621tion": {"default": "CIDR range:"}

    }

  }

},



"Mappings" : {

  "AWSRegionArch2AMI" : {

    "eu-west-1"      : { "HVM64" : "ami-d8f4deab" },

    "eu-west-1"      : { "HVM64" : "ami-6d48500b" },

    "eu-west-1"      : { "HVM64" : "ami-09447c6f" },

    "eu-west-2"      : { "HVM64" : "ami-d8f4deab" },

    "eu-west-2"      : { "HVM64" : "ami-6d48500b" },

    "eu-west-2"      : { "HVM64" : "ami-09447c6f" }

 }



},



"Resources" : {



  "VPC" : {

    "Type" : "AWS::EC2::VPC",



    "Properties" : {

      "CidrBlock" : "10.0.0.0/16",

      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]

    }

  },



  "S3Bucket" : {

    "Type" : "AWS::S3::Bucket",

      "Properties" : {

        "AccessControl" : "PublicReadWrite"

      },

  },
  "BucketPolicy": {
     "Type": "AWS::S3::BucketPolicy",
     "Properties": {
         "PolicyDocument": {
             "Id": "MyPolicy",
             "Version": "2012-10-17",
             "Statement": [
                 {
                     "Sid": "PublicReadForGetBucketObjects",
                     "Effect": "Allow",
                     "Principal": "*",
                     "Action": "s3:GetObject",
                     "Resource": {
                         "Fn::Join": [
                             "",
                             [
                                 "arn:aws:s3:::",
                                 {
                                     "Ref": "S3Bucket"
                                 },
                                 "/*"
                             ]
                         ]
                     }
                 }
             ]
         },
         "Bucket": {
             "Ref": "S3Bucket"
         }
     }
 },




  "Subnet" : {

    "Type" : "AWS::EC2::Subnet",

    "Properties" : {

      "VpcId" : { "Ref" : "VPC" },

      "CidrBlock" : "10.0.0.0/24",

      "AvailabilityZone" : "eu-west-1a",

      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]

    }

  },

  "Subnet2" : {

    "Type" : "AWS::EC2::Subnet",

    "Properties" : {

      "VpcId" : { "Ref" : "VPC" },

      "CidrBlock" : "10.0.3.0/24",

      "AvailabilityZone" : "eu-west-1b",

      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]

    }

  },



  "InternetGateway" : {

    "Type" : "AWS::EC2::InternetGateway",

    "Properties" : {

      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]

    }

  },



  "AttachGateway" : {

     "Type" : "AWS::EC2::VPCGatewayAttachment",

     "Properties" : {

       "VpcId" : { "Ref" : "VPC" },

       "InternetGatewayId" : { "Ref" : "InternetGateway" }

     }

  },



  "RouteTable" : {

    "Type" : "AWS::EC2::RouteTable",

    "Properties" : {

      "VpcId" : {"Ref" : "VPC"},

      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]

    }

  },



  "Route" : {

    "Type" : "AWS::EC2::Route",

    "DependsOn" : "AttachGateway",

    "Properties" : {

      "RouteTableId" : { "Ref" : "RouteTable" },

      "DestinationCidrBlock" : "0.0.0.0/0",

      "GatewayId" : { "Ref" : "InternetGateway" }

    }

  },



  "SubnetRouteTableAssociation" : {

    "Type" : "AWS::EC2::SubnetRouteTableAssociation",

    "Properties" : {

      "SubnetId" : { "Ref" : "Subnet" },

      "RouteTableId" : { "Ref" : "RouteTable" }

    }

  },

  "EC2Host" : {

    "Type" : "AWS::EC2::Instance",

    "DependsOn" : "InternetGateway",

    "Properties" : {

      "InstanceType" : { "Ref" : "InstanceType" },

      "KeyName"  : { "Ref" : "KeyName" },

      "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, "HVM64" ] },

      "NetworkInterfaces" : [{

        "GroupSet"                 : [{ "Ref" : "InstanceSecurityGroup" }],

        "AssociatePublicIpAddress" : "true",

        "DeviceIndex"              : "0",

        "DeleteOnTermination"      : "true",

        "SubnetId"                 : { "Ref" : "Subnet" }

      }]

    }

  },

  "MyDB" : {

   "Type" : "AWS::RDS::DBInstance",

   "Properties" : {



       "AllocatedStorage" : "5",

       "DBInstanceClass" : "db.t2.micro",

       "Engine" : "MySQL",

       "MasterUsername" : "root",

       "MasterUserPassword" : "cruktestdb",

       "DBSubnetGroupName":{

         "Ref":"myDBSubnetGroup"
       },

   },

   "DeletionPolicy" : "Delete"

 },

 "myDBSubnetGroup":{

   "Type" : "AWS::RDS::DBSubnetGroup",

     "Properties" : {

       "DBSubnetGroupDescription" : "description",

       "SubnetIds" : [{ "Ref" : "Subnet" }, { "Ref" : "Subnet2" }],

       "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
                },
  },









  "InstanceSecurityGroup" : {

    "Type" : "AWS::EC2::SecurityGroup",

    "Properties" : {

      "VpcId" : {"Ref" : "VPC"},

      "GroupDescription" : "Enable SSH access via port 22",

      "SecurityGroupIngress" : [ {

        "IpProtocol" : "tcp",

        "FromPort" : "22",

        "ToPort" : "22",

        "CidrIp" : { "Ref" : "SSHLocation"}

      } ]

    }

  },

},



"Outputs" : {

  "VPCId" : {

    "Description" : "VPCId of the newly created VPC",

    "Value" :  { "Ref" : "VpcId" }

  },

  "Subnet" : {

    "Description" : "Subnet of the public subnet",

    "Value" :  { "Ref" : "Subnet" }

  },

  "DNSName" : {

    "Description" : "DNS Name of the EC2 host",

    "Value" : { "Fn::GetAtt" : [ "EC2Host", "PublicDnsName" ] }

  }

}

}
